#!/usr/bin/env node
"use strict";

var app = require("app");
var debug = require("debug")("Blog:server");
var http = require("http");
var config = require("config");
var mongoose = require("lib/mongoose");

var port = process.env.PORT || config.get("port");
app.set("port", port);

var server = http.createServer(app);

/*if (app.get("env") == "development") {
 const exec = require("child_process").exec;
 exec("tsc -w", function () {
 console.log("test");
 debug(arguments);
 });
 }*/

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);
server.on("close", onClose);

function onError(error) {
	if (error.syscall !== "listen") {
		throw error;
	}

	var bind = typeof port === "string"
		? "Pipe " + port
		: "Port " + port;

	// handle specific listen errors with friendly messages
	switch (error.code) {
		case "EACCES":
			console.error(bind + " requires elevated privileges");
			process.exit(1);
			break;
		case "EADDRINUSE":
			console.error(bind + " is already in use");
			process.exit(1);
			break;
		default:
			throw error;
	}
}

function onListening() {
	var addr = server.address();
	var bind = typeof addr === "string"
		? "pipe " + addr
		: "port " + addr.port;
	debug("Listening on " + bind);
}

function onClose() {
	mongoose.connection.close();
}

app.set("io", require("socketio")(server));